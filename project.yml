---
apiVersion: v1
kind: Template
metadata:
  name: redis-ruby-template
  annotations:
    description: "Description"
    iconClass: "icon-redis"
    tags: "redis,ruby"
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp:
      generation: 1
      labels:
        app: redisharu
      name: redisharu
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: redis-build
      creationTimestamp:
      labels:
        name: redis-build
    spec:
      source:
        type: Git
        git:
          uri: git://github.com/ahharu/openshift-demo
          ref: master
        contextDir: projects/redis
      strategy:
        type: Docker
        dockerStrategy:
      triggers:
        - github:
            secretReference:
              name: redis-build-trigger
          type: GitHub
      output:
        to:
          kind: ImageStreamTag
          name: redisharu:latest
      resources: {}
  - apiVersion: v1
    data:
      WebHookSecretKey: MWUyNzY0ZDAxYjQ2ODQxOQ==
    kind: Secret
    metadata:
      creationTimestamp:
      name: redis-build-trigger
    type: Opaque
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp:
      generation: 1
      labels:
        app: rubyharu
      name: rubyharu
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ruby-build
      creationTimestamp:
      labels:
        name: ruby-build
    spec:
      source:
        type: Git
        git:
          uri: git://github.com/ahharu/openshift-demo
          ref: master
        contextDir: projects/ruby-app
      strategy:
        type: Docker
        dockerStrategy:
      triggers:
        - github:
            secretReference:
              name: ruby-build-trigger
          type: GitHub
      output:
        to:
          kind: ImageStreamTag
          name: rubyharu:latest
      resources: {}
  - apiVersion: v1
    data:
      WebHookSecretKey: MWUyNzY0ZDAxYjQ2ODQxOQ==
    kind: Secret
    metadata:
      creationTimestamp:
      name: ruby-build-trigger
    type: Opaque
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: rubyharu
      labels:
        deploymentConfig: rubyharu
        application: rubyharu
    spec:
      replicas: 2
      selector:
        deploymentConfig: rubyharu
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            deploymentConfig: rubyharu
            application: rubyharu
          name: rubyharu
        spec:
          containers:
            - name: rubyharu
              image: rubyharu
              imagePullPolicy: Always
              env:
                - name: REDIS_HOST
                  value: '127.0.0.1'
                - name: REDIS_PORT
                  value: '6379'
                - name: REDIS_PASSWORD
                  value: 'default-password'
              ports:
                - name: rubyharu-http
                  containerPort: 4567
                  protocol: TCP
              resources: {}
              terminationMessagePath: "/dev/termination-log"
              securityContext:
                capabilities: {}
                privileged: false
          restartPolicy: Always
          dnsPolicy: ClusterFirst
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - rubyharu
          from:
            kind: ImageStreamTag
            name: rubyharu:latest
      - type: ConfigChange
  - kind: Service
    apiVersion: v1
    metadata:
      name: rubyharu
      labels:
        application: rubyharu
    spec:
      ports:
      - port: 4567
        targetPort: 4567
        name: rubyharu-8080
      selector:
        deploymentConfig: rubyharu
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        application: rubyharu
      name: rubyharu
    spec:
      port:
        targetPort: rubyharu-8080
      to:
        kind: Service
        name: rubyharu
        weight: 100
      wildcardPolicy: None
  - apiVersion: v1
    stringData:
      databse-password: larinaga
    kind: Secret
    metadata:
      name: redis
    type: Opaque

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: redisharu
      labels:
        deploymentConfig: redisharu
        application: redisharu
    spec:
      replicas: 1
      selector:
        deploymentConfig: redisharu
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            deploymentConfig: redisharu
            application: redisharu
          name: redisharu
        spec:
          containers:
            - name: redisharu
              image: redisharu
              imagePullPolicy: Always
              ports:
                - name: redisharu-port
                  containerPort: 6379
                  protocol: TCP
              resources: {}
              terminationMessagePath: "/dev/termination-log"
              securityContext:
                capabilities: {}
                privileged: false
              volumeMounts:
                - mountPath: /data
                  name: redis-data
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - '-i'
                    - '-c'
                    - >-
                      test "$(redis-cli -h 127.0.0.1 -a default-password ping)" ==
                      "PONG"
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
          restartPolicy: Always
          dnsPolicy: ClusterFirst
          volumes:
            - emptyDir: {}
              name: redis-data
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - redisharu
          from:
            kind: ImageStreamTag
            name: redisharu:latest
      - type: ConfigChange
  - kind: Service
    apiVersion: v1
    metadata:
      name: redisharu
      labels:
        application: redisharu
    spec:
      ports:
      - port: 6379
        targetPort: 6379
        name: rubyharu-6379
      selector:
        deploymentConfig: rubyharu